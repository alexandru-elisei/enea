{{!
    @template mod_enea/search_results
}}

<br>
<h3 class="text">{{# str}} searchresults, mod_enea {{/ str}}</h3>
<br>

<p class="justify"> {{# str}} selectlessons, mod_enea {{/ str}}</p>
<p class="justify"> {{# str}} disabledlessons, mod_enea {{/ str}}</p>

<form id="search-results-form">
    {{# has_prereq}}
    <br>
    <div class="form-row text-left lead">
        <dt><u>{{# str}} prerequisites, mod_enea {{/ str}}</u></dt>
    </div>

    {{< mod_enea/search_results_category_heading}}
    {{$ title}} {{# str}} title, mod_enea {{/ str}} {{/ title}}
    {{$ time}}  {{# str}} time, mod_enea {{/ str}}  {{/ time}}
    {{/ mod_enea/search_results_category_heading}}

    {{# prereq}}
    {{< mod_enea/search_results_row}}
    {{$ elt_name}}{{ id }}{{/ elt_name}}
    {{$ course_title}}{{ title }}{{/ course_title}}
    {{$ course_link}}{{ uri }}{{/ course_link}}
    {{$ course_time}}{{ time }}{{/ course_time}}
    {{$ course_rawtime}}{{ rawtime }}{{/ course_rawtime}}
    {{$ course_help}}{{ help }}{{/ course_help}}
    {{/ mod_enea/search_results_row}}
    {{/ prereq}}
    <br>
    {{/ has_prereq}}

    <br>
    <div class="form-row text-left lead">
        <dt><u>{{# str}} recommendedlessons, mod_enea {{/ str}}</u></dt>
    </div>

    {{< mod_enea/search_results_category_heading}}
    {{$ title}} {{# str}} title, mod_enea {{/ str}} {{/ title}}
    {{$ time}}  {{# str}} time, mod_enea {{/ str}}  {{/ time}}
    {{/ mod_enea/search_results_category_heading}}

    {{# recommended}}
    {{< mod_enea/search_results_row}}
    {{$ elt_name}}{{ id }}{{/ elt_name}}
    {{$ course_title}}{{ title }}{{/ course_title}}
    {{$ course_link}}{{ uri }}{{/ course_link}}
    {{$ course_time}}{{ time }}{{/ course_time}}
    {{$ course_rawtime}}{{ rawtime }}{{/ course_rawtime}}
    {{$ course_help}}{{ help }}{{/ course_help}}
    {{/ mod_enea/search_results_row}}
    {{/ recommended}}

    {{# has_postreq}}
    <br>
    <br>
    <div class="form-row text-left lead">
        <dt><u>{{# str}} followuplessons, mod_enea {{/ str}}</u></dt>
    </div>

    {{< mod_enea/search_results_category_heading}}
    {{$ title}} {{# str}} title, mod_enea {{/ str}} {{/ title}}
    {{$ time}}  {{# str}} time, mod_enea {{/ str}}  {{/ time}}
    {{/ mod_enea/search_results_category_heading}}

    {{# postreq}}
    {{< mod_enea/search_results_row}}
    {{$ elt_name}}{{ id }}{{/ elt_name}}
    {{$ course_title}}{{ uri }}{{/ course_title}}
    {{$ course_link}}{{ link }}{{/ course_link}}
    {{$ course_time}}{{ time }}{{/ course_time}}
    {{$ course_rawtime}}{{ rawtime }}{{/ course_rawtime}}
    {{$ course_help}}{{ help }}{{/ course_help}}
    {{/ mod_enea/search_results_row}}
    {{/ postreq}}
    {{/ has_postreq}}

    <br>

    <div class="form-row text-left ">
        <p id='totaltime'>{{# str}} totaltime, mod_enea {{/ str}}: 0</p>
    </div>

    <div style="display: none">
        <input name="directdeps" type="hidden" value="{{ directdeps }}">
        <input name="reversedeps" type="hidden" value="{{ reversedeps }}">
        <input name="postreqids" type="hidden" value="{{ postreqids }}">
        {{# id}}
        <input name="id" type="hidden" value="{{ id }}">
        {{/ id}}
        {{# cmid}}
        <input name="cmid" type="hidden" value="{{ cmid }}">
        {{/ cmid}}
    </div>

    <br>
    <div class="form-inline felement data-fieldtype="group"">
        <div class="form-group fitem">
            <input type="submit" class="btn btn-primary" name="finishbutton" value="{{# str}} finish, mod_enea {{/ str}}">
        </div>
        <input class="btn btn-secondary" type="reset" name="clearbutton" value="{{# str}} clear, mod_enea {{/ str}}">
    </div>

{{!
    <div class="box generalbox">
        <a class="btn btn-link p-a-0" role="button" tabindex="0" data-container="body" data-toggle="popover" data-placement="right" data-content="Help message" name="helpbutton" data-trigger="focus" data-html="true">
            <i class="icon fa fa-question-circle-o text-info fa-fw" title="Help with registration" aria-label="Help with registration">?</i>
        </a>
    </div>
}}
</form>

{{# js}}

    // Return ddhhmm time from time in minutes.
    function pretty_time(rawtime) {
        var ret = ''
        var hoursminutes = 0
        var days = 0

        rawtime = parseInt(rawtime)

        hoursminutes = rawtime % (60*24)
        days = (rawtime - hoursminutes) / (60*24)
        if (days > 0) {
            ret = ret + days + 'd'
        }

        var minutes = hoursminutes % 60
        var hours = (hoursminutes - minutes) / 60;
        if (hours > 0 || ret != '') {
            ret = ret + hours + 'h';
        }
        ret = ret + minutes + 'm';

        return ret;
    }

    function update_total_time(total_time) {
        var new_time_text = "Total time: " + pretty_time(total_time)
        document.getElementById("totaltime").innerHTML = new_time_text
    }

    require(['jquery'], function($) {
        $('document').ready(function() {
            var directdeps = JSON.parse($('[name="directdeps"]').val())
            var reversedeps = JSON.parse($('[name="reversedeps"]').val())

            var total_time = 0

            // All recommended lessons are enabled and checked by default.
            {{# recommended}}
            $("[name='{{ id }}']").prop('disabled', false)
            $("[name='{{ id }}']").prop('checked', true)
            total_time = total_time + {{ rawtime }}
            {{/ recommended}}

            // When loading the document, disable all the courses that have a
            // dependency because there are no checked checkboxes on the page.
            //
            /*
            // Not needed for now - all the prereq and recommended courses are
            // enabled by default and we disable postreq courses if they don't
            // have all their dependencies checked.
            $.each(directdeps, function(id, deps) {
                $("[name='" + id + "']").prop('disabled', true)
            });
            */

            // All prerequisite lessons are enabled and checked by default.
            {{# prereq}}
            $("[name='{{ id }}']").prop('disabled', false)
            $("[name='{{ id }}']").prop('checked', true)
            total_time = total_time + {{ rawtime }}
            {{/ prereq}}

            // Disable only those postrequisites that don't have all of their
            // dependencies enabled and checked.
            {{# postreq}}
            if ({{ id }} in directdeps) {
                to_disable = false
                $.each(directdeps[{{ id }}], function(_, dirdep) {
                    if (!$("[name='" + dirdep + "']").prop('checked') ||
                             $("[name='" + dirdep + "']").prop('disabled')) {
                        to_disable = true
                    }
                })
                if (to_disable) {
                    $("[name='{{ id }}']").prop('checked', false)
                    $("[name='{{ id }}']").prop('disabled', true)
                } else {
                    total_time = total_time + {{ rawtime }}
                }
            }
            {{/ postreq}}

            update_total_time(total_time)

            // For each course 'id' that has courses that depend on it check if
            // the courses that depend on it can be enabled when 'id' is
            // checked.
            $.each(reversedeps, function(id, revdeps) {
                $("[name='" + id + "']").change(function() {
                    if (!this.checked) {
                        var rawtime = parseInt($('[name="' + id + '_rawtime"]').val())
                        // If 'id' is unchecked then disable all the courses
                        // that depend on it.
                        $.each(revdeps, function(_, revdep) {
                            if ($("[name='" + revdep + "']").prop('checked')) {
                                rawtime = rawtime + parseInt($('[name="' + revdep + '_rawtime"]').val())
                                $("[name='" + revdep + "']").prop('checked', false)
                            }
                            $("[name='" + revdep + "']").prop('disabled', true)
                        });

                        total_time = total_time - rawtime
                    } else {
                        var rawtime = parseInt($('[name="' + id + '_rawtime"]').val())
                        // Enable each course that depends on 'id' if all their
                        // dependencies are checked.
                        $.each(revdeps, function(_, revdep) {
                            to_enable = true
                            // Check if all the dependencies of revdep are
                            // satisfied.
                            $.each(directdeps[revdep], function(_, dirdep) {
                                if (!$("[name='" + dirdep + "']").prop('checked') ||
                                         $("[name='" + dirdep + "']").prop('disabled')) {
                                    to_enable = false
                                }
                            })
                            if (to_enable) {
                                $("[name='" + revdep + "']").prop('disabled', false)
                            } else {
                                $("[name='" + revdep + "']").prop('disabled', true)
                            }

                        });

                        total_time = total_time + rawtime
                    }

                    update_total_time(total_time)
                });
            });

            // Courses that have reverse dependencies have their contribution
            // to the total time modified when they are toggled. Do not include
            // their total time twice.

            {{# recommended}}
            $("[name='{{ id }}']").change(function() {
                var already_processed = false
                $.each(reversedeps, function(id, revdeps) {
                    if (id == "{{ id }}") {
                        already_processed = true
                    }
                })
                if (!already_processed) {
                    if (!this.checked) {
                        total_time = total_time - {{ rawtime }}
                    } else {
                        total_time = total_time + {{ rawtime }}
                    }
                    update_total_time(total_time)
                }
            })
            {{/ recommended}}

            {{# prereq}}
            $("[name='{{ id }}']").change(function() {
                var already_processed = false
                $.each(reversedeps, function(id, revdeps) {
                    if (id == "{{ id }}") {
                        already_processed = true
                    }
                })
                if (!already_processed) {
                    if (!this.checked) {
                        total_time = total_time - {{ rawtime }}
                    } else {
                        total_time = total_time + {{ rawtime }}
                    }
                    update_total_time(total_time)
                }
            })
            {{/ prereq}}

            {{# postreq}}
            $("[name='{{ id }}']").change(function() {
                var already_processed = false
                $.each(reversedeps, function(id, revdeps) {
                    if (id == "{{ id }}") {
                        already_processed = true
                    }
                })
                if (!already_processed) {
                    if (!this.checked) {
                        total_time = total_time - {{ rawtime }}
                    } else {
                        total_time = total_time + {{ rawtime }}
                    }
                    update_total_time(total_time)
                }
            })
            {{/ postreq}}

            $('#search-results-form').on('reset', function() {
                setTimeout(function() {
                    $.each(directdeps, function(id, deps) {
                        $("[name='" + id + "']").prop('disabled', true);
                        $("[name='" + id + "']").prop('checked', false);

                    });
                total_time = 0
                update_total_time(0)
                });
            });

        });
    });
{{/ js}}
